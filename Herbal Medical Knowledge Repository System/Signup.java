
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Scanner;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Hunter961103
 */
public class Signup extends javax.swing.JFrame {
    UserNode head = null;
    
    /**
     * Creates new form Signup
     */
    public Signup() {
        initComponents();
        setLocationRelativeTo(null);
        useriderror.setVisible(false);
        emailerror.setVisible(false);
        try {
            File file = new File("UserData.txt");
            FileReader fileReader = new FileReader(file);
            Scanner scanner = new Scanner(fileReader);
            while(scanner.hasNext()) {
                String id = scanner.next();
                String pass = scanner.next();
                String email = scanner.next();
                String usertype = scanner.next();
                UserNode list = new UserNode(id , pass , email , usertype);
                if(head == null)
                    head = list;
                else {
                    list.setLink(head);
                    head = list;
                }
            }
            fileReader.close();
        }
        catch(FileNotFoundException ex) {
            ex.printStackTrace();
        }
        catch(IOException ex) {
            ex.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        title = new javax.swing.JLabel();
        panel = new javax.swing.JPanel();
        registeras = new javax.swing.JLabel();
        useridlabel = new javax.swing.JLabel();
        passwordlabel = new javax.swing.JLabel();
        usertypecb = new javax.swing.JComboBox<>();
        passwordfield = new javax.swing.JPasswordField();
        cpasswordlabel = new javax.swing.JLabel();
        emaillabel = new javax.swing.JLabel();
        cpasswordfield = new javax.swing.JPasswordField();
        useriderror = new javax.swing.JLabel();
        emailerror = new javax.swing.JLabel();
        useridfield = new javax.swing.JTextField();
        emailfield = new javax.swing.JTextField();
        back = new javax.swing.JButton();
        register = new javax.swing.JButton();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Herbal Medical Knowledge Repository System");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        title.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("Herbal Medical Knowledge Repository System");
        title.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(title, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 11, 357, -1));

        panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        registeras.setText("Register as :");

        useridlabel.setText("User ID :");

        passwordlabel.setText("Password :");

        usertypecb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Admin", "User" }));

        cpasswordlabel.setText("Comfirm password :");

        emaillabel.setText("Email :");

        useriderror.setForeground(new java.awt.Color(255, 0, 0));
        useriderror.setText("User ID is already exist");

        emailerror.setForeground(new java.awt.Color(255, 0, 0));
        emailerror.setText("Email is already used");

        useridfield.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                useridfieldMouseClicked(evt);
            }
        });

        emailfield.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                emailfieldMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(emaillabel)
                    .addComponent(cpasswordlabel)
                    .addComponent(useridlabel)
                    .addComponent(registeras)
                    .addComponent(passwordlabel))
                .addGap(18, 18, 18)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(emailerror)
                    .addComponent(useriderror)
                    .addComponent(passwordfield, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usertypecb, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cpasswordfield, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(useridfield, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailfield, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usertypecb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(registeras))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(useridlabel)
                    .addComponent(useridfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(useriderror)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordlabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cpasswordfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cpasswordlabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emaillabel)
                    .addComponent(emailfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(emailerror)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 50, 357, -1));

        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        getContentPane().add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 270, -1, -1));

        register.setText("Register");
        register.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerActionPerformed(evt);
            }
        });
        getContentPane().add(register, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 270, -1, -1));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Signup Background.jpg"))); // NOI18N
        background.setText("jLabel2");
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 430, 300));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        close();
        Login frame1 = new Login();
        frame1.setVisible(true);
    }//GEN-LAST:event_backActionPerformed

    private void registerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerActionPerformed
        boolean error = true;
        String userid = useridfield.getText();
        if(userid.contains(" ")) {
            error = false;
            useriderror.setText("Spacing is not allowed");
            useriderror.setVisible(true);
            useridfield.setText("");
        }
        String password = passwordfield.getText();
        if(password.contains(" ")) {
            error = false;
            passwordfield.setText("");
            cpasswordfield.setText("");
        }
        String cpassword = cpasswordfield.getText();
        String email = emailfield.getText();
        if(email.contains(" ")) {
            error = false;
            emailerror.setText("Spacing is not allowed");
            emailerror.setVisible(true);
            emailfield.setText("");
        }
        String usertype = usertypecb.getSelectedItem().toString();
        if(userid.equals("") || password.equals("") || cpassword.equals("") || email.equals("")) {
            error = false;
            JOptionPane.showMessageDialog(null , "Information does not complete");
        }
        else {
            UserNode current = head;
            while(current != null) {
                if(current.getUserid().equals(userid)) {
                    error = false;
                    useriderror.setVisible(true);
                    useridfield.setText("");
                }
                if(current.getEmail().equals(email)) {
                    error = false;
                    emailerror.setVisible(true);
                    emailfield.setText("");
                }
                current = current.getLink();
            }
            if(!password.equals(cpassword)) {
                error = false;
                passwordfield.setText("");
                cpasswordfield.setText("");
            }
            if(email.indexOf("@gmail.com") == -1 && email.indexOf("@hotmail.com") == -1 && email.indexOf("@yahoo.com") == -1) {
                error = false;
                emailerror.setText("Email format is invalid");
                emailerror.setVisible(true);
                emailfield.setText("");
            }
        }
        if(error) {
            UserNode newNode = new UserNode(userid , password , email , usertype);
            if(head == null)
                head = newNode;
            else {
                newNode.setLink(head);
                head = newNode;
            }
            try {
                File file = new File("UserData.txt");
                FileWriter fileWriter = new FileWriter(file);
                PrintWriter printWriter = new PrintWriter(fileWriter);
                UserNode current = head;
                while(current != null) {
                    printWriter.printf("%s %s %s %s%n" , current.getUserid().toString() , current.getPassword().toString() , current.getEmail().toString() , current.getUsertype().toString());
                    current = current.getLink();
                }
                printWriter.close();
            }
            catch(IOException ex) {
                ex.printStackTrace();
            }
            JOptionPane.showMessageDialog(null , "Your registration is successful");
            close();
            Login frame2 = new Login();
            frame2.setVisible(true);
        }
    }//GEN-LAST:event_registerActionPerformed

    private void useridfieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_useridfieldMouseClicked
        useriderror.setVisible(false);
        useriderror.setText("User ID is already exist");
    }//GEN-LAST:event_useridfieldMouseClicked

    private void emailfieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emailfieldMouseClicked
        emailerror.setVisible(false);
        emailerror.setText("Email is already used");
    }//GEN-LAST:event_emailfieldMouseClicked

    public void close() {
        WindowEvent close = new WindowEvent(this , WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(close);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Signup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Signup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Signup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Signup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Signup().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JLabel background;
    private javax.swing.JPasswordField cpasswordfield;
    private javax.swing.JLabel cpasswordlabel;
    private javax.swing.JLabel emailerror;
    private javax.swing.JTextField emailfield;
    private javax.swing.JLabel emaillabel;
    private javax.swing.JPanel panel;
    private javax.swing.JPasswordField passwordfield;
    private javax.swing.JLabel passwordlabel;
    private javax.swing.JButton register;
    private javax.swing.JLabel registeras;
    private javax.swing.JLabel title;
    private javax.swing.JLabel useriderror;
    private javax.swing.JTextField useridfield;
    private javax.swing.JLabel useridlabel;
    private javax.swing.JComboBox<String> usertypecb;
    // End of variables declaration//GEN-END:variables
}
